import type { IShape } from "tsparticles/dist/Interfaces/Options/Particles/Shape/IShape";
import type { IColor } from "tsparticles/dist/Interfaces/IColor";
import type { ILineLinked } from "tsparticles/dist/Interfaces/Options/Particles/LineLinked/ILineLinked";
import type { IMove } from "tsparticles/dist/Interfaces/Options/Particles/IMove";
import type { IParticlesNumber } from "tsparticles/dist/Interfaces/Options/Particles/IParticlesNumber";
import type { IOpacity } from "tsparticles/dist/Interfaces/Options/Particles/Opacity/IOpacity";
import type { ISize } from "tsparticles/dist/Interfaces/Options/Particles/Size/ISize";
import type { IOptionLoader } from "tsparticles/dist/Interfaces/Options/IOptionLoader";
import type { IRotate } from "tsparticles/dist/Interfaces/Options/Particles/Rotate/IRotate";
import type { IShadow } from "tsparticles/dist/Interfaces/Options/Particles/IShadow";
import type { SingleOrMultiple } from "tsparticles/dist/Types/SingleOrMultiple";
import type { IStroke } from "tsparticles/dist/Interfaces/Options/Particles/IStroke";
import type { ICollisions } from "tsparticles/dist/Interfaces/Options/Particles/ICollisions";
import type { ITwinkle } from "tsparticles/dist/Interfaces/Options/Particles/Twinkle/ITwinkle";
export interface IParticles extends IOptionLoader<IParticles> {
    collisions: ICollisions;
    color: SingleOrMultiple<IColor>;
    line_linked: ILineLinked;
    lineLinked: ILineLinked;
    move: IMove;
    number: IParticlesNumber;
    opacity: IOpacity;
    rotate: IRotate;
    shadow: IShadow;
    shape: IShape;
    size: ISize;
    stroke: SingleOrMultiple<IStroke>;
    twinkle: ITwinkle;
}
